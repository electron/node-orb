description: >
  Simple drop-in job to test your Node.js project automatically.

parameters:
  app-dir:
    default: .
    description: >-
      Path to the directory containing your package.json file. Not needed if
      package.json lives in the root.
    type: string
  arch:
    default: ""
    description: >
      Arch to use for executing the Bash script - only supported for installing
      x86_64 Node.js on macOS ARM64 (must install Rosetta first).
    type: string
  cache-version:
    default: v1
    description: >
      Change the default cache version if you need to clear the cache for any
      reason.
    type: string
  checkout-steps:
    default:
      - checkout
    description: Steps to use as the checkout steps.
    type: steps
  node-version:
    description: >
      Specify the Node.js version to install. Can be a major version, a minor
      version (e.g. 18.16), an exact version number, "latest" or "lts".
    type: string
  override-ci-command:
    default: ''
    description: >
      By default, packages will be installed with "npm ci", "yarn install
      --frozen-lockfile" or "yarn install --immutable".

      Optionally supply a custom package installation command, with any
      additional flags needed.
    type: string
  pkg-manager:
    default: yarn
    description: Select the default node package manager to use. NPM v5+ Required.
    enum:
      - npm
      - yarn
    type: enum
  post-node-js-install-steps:
    default: []
    description: Steps to run after installing the Node.js version, before installing packages.
    type: steps
  test-steps:
    default: []
    description: Steps to use as the test steps. Must set use-test-steps parameter to `true`.
    type: steps
  use-test-steps:
    default: false
    description: Use provided test steps - required due to CircleCI shortcomings.
    type: boolean
  with-node-js-cache:
    default: true
    description: Cache the Node.js version to avoid re-downloading on future runs.
    type: boolean
  with-package-cache:
    default: true
    description: Cache your node packages automatically for faster install times.
    type: boolean

steps:
  - steps: << parameters.checkout-steps >>
  - when:
      condition:
        equal: [ yarn, << parameters.pkg-manager >> ]
      steps:
        - install:
            arch: << parameters.arch >>
            cache-version: << parameters.cache-version >>
            install-yarn: true
            node-version: << parameters.node-version >>
            with-cache: << parameters.with-node-js-cache >>
  - when:
      condition:
        equal: [ npm, << parameters.pkg-manager >> ]
      steps:
        - install:
            arch: << parameters.arch >>
            cache-version: << parameters.cache-version >>
            install-yarn: false
            node-version: << parameters.node-version >>
            with-cache: << parameters.with-node-js-cache >>
  - steps: << parameters.post-node-js-install-steps >>
  - install-packages:
      app-dir: << parameters.app-dir >>
      cache-version: << parameters.cache-version >>
      override-ci-command: << parameters.override-ci-command >>
      pkg-manager: << parameters.pkg-manager >>
      with-cache: << parameters.with-package-cache >>
  - when:
      condition: << parameters.use-test-steps >>
      steps: << parameters.test-steps >>
  - unless:
      condition: << parameters.use-test-steps >>
      steps:
        - run:
            command: << parameters.pkg-manager >> test
            working_directory: << parameters.app-dir >>
